{"version":3,"sources":["firebase-config.js","components/operations/firebaseOperations.js","components/models/models.js","components/display/DisplayOptions.js","components/pages/SuccessPage.js","components/menu/MainMenu.js","components/services/Login.js","components/services/NewUser.js","components/display/ScoreCard.js","components/pages/ListScores.js","components/pages/ViewScore.js","components/pages/UpdateScore.js","App.js","ThemedApp.js","index.js","assets/fastgain_logo_F.jpeg"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","createNewUser","async","email","password","name","auth","getAuth","user","createUserWithEmailAndPassword","docRef","addDoc","collection","uid","scores","setDoc","doc","id","document_id","merge","success","userId","docId","error","console","message","newScore","score","total_score","currentUser","userDocID","getUserDocumentId","scoreRef","patientName","totalScore","fibrillation","age","strokeScale","tHemorrhage","glucose","aspects","injury","nasoenteral","createdAt","Date","userDocRef","updateDoc","arrayUnion","scoreId","q","query","where","querySnapshot","getDocs","empty","log","docs","updateScore","updatedFields","Score","constructor","documentId","_ref","this","updateOption","option","value","hasOwnProperty","DisplayOptions","setScore","useState","undefined","openDialog","setOpenDialog","navigate","useNavigate","handleOptionChange","updatedScore","handleClose","handleSubmit","e","preventDefault","calculatedTotalScore","Object","keys","reduce","acc","key","state","React","createElement","Box","sx","padding","maxWidth","margin","onSubmit","display","flexDirection","alignItems","TextField","label","onChange","target","variant","fullWidth","FormControlLabel","control","Checkbox","checked","FormLabel","component","RadioGroup","Radio","Button","marginTop","width","onClick","handleClickOpen","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","SuccessPage","location","useLocation","MainMenu","mt","Typography","gutterBottom","& > button","m","Grid","container","spacing","direction","item","color","handleAddScore","handleListScores","handleSignOut","signOut","Login","setEmail","setPassword","setError","event","signInWithEmailAndPassword","justifyContent","height","src","logo","alt","style","maxHeight","type","required","mb","NewUser","setName","noValidate","autoComplete","ScoreCard","onViewOptions","onUpdateScore","onDeleteScore","anchorEl","setAnchorEl","Card","CardContent","IconButton","aria-label","aria-controls","aria-haspopup","currentTarget","MoreVertIcon","fontSize","Menu","Boolean","MenuItem","ListScores","setScores","refresh","setRefresh","useEffect","validScores","userDocSnap","getDoc","exists","scoresDataPromises","data","map","Promise","all","snapshot","fetchScores","filter","loadScores","handleDeleteScore","deleteDoc","arrayRemove","deleteScore","prev","alignContent","xs","handleViewOptions","receivedScore","handleUpdateScore","ViewScore","disabled","handleBackButton","UpdateScore","updatedAt","& .MuiTextField-root","& .MuiButton-root","App","Router","Routes","Route","path","element","theme","createTheme","palette","primary","main","secondary","background","default","text","ThemedApp","ThemeProvider","CssBaseline","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a3a5276a.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCITvJNpH0eYSft9CAk360UUXoCIOZnl5o\",\n    authDomain: \"score-app-d9572.firebaseapp.com\",\n    projectId: \"score-app-d9572\",\n    storageBucket: \"score-app-d9572.appspot.com\",\n    messagingSenderId: \"718093172886\",\n    appId: \"1:718093172886:web:299b6a826045c5c0c402b7\",\n    measurementId: \"G-G4WL1605FS\"\n  };\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nexport default db;\n","// firebaseOperations.js\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { doc, setDoc, addDoc, collection, deleteDoc, updateDoc, arrayUnion, query, where, getDocs, getDoc, arrayRemove } from 'firebase/firestore';\nimport db from '../../firebase-config';\n\n// Function to create a new user\nexport const createNewUser = async (email, password, name) => {\n  const auth = getAuth();\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n\n    // Add a new document in Firestore with the additional user info\n    const docRef = await addDoc(collection(db, 'users'), {\n      uid: user.uid,\n      name,\n      email,\n      scores: []\n    });\n\n\n    // Update the document with its ID\n    await setDoc(doc(db, 'users', docRef.id), { document_id: docRef.id }, { merge: true });\n\n    return { success: true, userId: user.uid, docId: docRef.id };\n  } catch (error) {\n    console.error(\"Error creating new user: \", error);\n    return { success: false, error: error.message };\n  }\n};\n\n// Create a score with the model\nexport const newScore = async (score, total_score) => {\n\n    const auth = getAuth();\n    const user = auth.currentUser;\n\n    if (!user) {\n        console.error(\"No authenticated user found. \");\n        return { success: false, error: \"No authenticated user. \"};\n    }\n\n    try {\n\n      const userDocID = await getUserDocumentId(user.uid);\n      const scoreRef = await addDoc(collection(db, 'scores'), {\n          patientName: score.patientName,\n          totalScore: total_score,\n          score: {\n            fibrillation: score.score.fibrillation,\n            age: score.score.age,\n            strokeScale: score.score.strokeScale,\n            tHemorrhage: score.score.tHemorrhage,\n            glucose: score.score.glucose,\n            aspects: score.score.aspects,\n            injury: score.score.injury,\n            nasoenteral: score.score.nasoenteral\n          },\n          createdAt: new Date(),\n          userId: user.uid\n      });\n\n      const userDocRef = doc(db, 'users', userDocID);\n\n      await updateDoc(userDocRef, {\n        scores: arrayUnion(scoreRef.id)\n      });\n\n      return { success: true, scoreId: scoreRef.id };\n      \n    } catch (error) {\n      console.error(\"Error adding new score: \", error);\n      return { success: false, error: error.message };      \n    }\n\n}\n\n// Get the document ID of a user\nexport const getUserDocumentId = async (uid) => {\n\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", uid));\n    const querySnapshot = await getDocs(q);\n    \n    if (!querySnapshot.empty) {\n      // Assuming uid is unique and only one document exists\n      const docId = querySnapshot.docs[0].id; // This is your document ID\n      return docId;\n    } else {\n      console.log(\"No document found for the given UID.\");\n      return null;\n    }\n};\n\n// Fetch all scores\nexport const fetchScores = async (uid) => {\n  const userId = await getUserDocumentId(uid);\n  const userDocRef = doc(db, 'users', userId);\n  const userDocSnap = await getDoc(userDocRef);\n\n  if (userDocSnap.exists()) {\n    const userScoresIds = userDocSnap.data().scores; // The array of scores document IDs\n    const scoresDataPromises = userScoresIds.map(scoreId => getDoc(doc(db, 'scores', scoreId)));\n    const scoresDataSnapshots = await Promise.all(scoresDataPromises);\n\n    const scoresData = scoresDataSnapshots.map(snapshot => ({ id: snapshot.id, ...snapshot.data() }));\n    return scoresData; // Array of score data objects\n  } else {\n    console.log(\"No such user document!\");\n    return [];\n  }\n};\n\n\n// Update a score\nexport const updateScore = async (scoreId, updatedFields) => {\n\n    const auth = getAuth();\n    const user = auth.currentUser;\n    if (!user) {\n        console.error(\"No authenticated user found. \");\n        return { success: false, error: \"No authenticated user. \"};\n    }\n\n    const scoreRef = doc(db, 'scores', scoreId);\n\n    try {\n      await updateDoc(scoreRef, updatedFields);\n    } catch (error) {\n      console.error(\"Error updating score: \", error);\n      \n    }\n    \n};\n\n// Delete a score\nexport const deleteScore = async (scoreId) => {\n\n    const auth = getAuth();\n    const user = auth.currentUser;\n    if (!user) {\n        console.error(\"No authenticated user found. \");\n        return { success: false, error: \"No authenticated user. \"};\n    }\n\n    try {\n      // Delete from scores collection\n      await deleteDoc(doc(db, 'scores', scoreId));\n\n      // Now delete from the 'scores' array in the user document\n      const userId = await getUserDocumentId(user.uid);\n      const userDocRef = doc(db, 'users', userId);\n      await updateDoc(userDocRef, {\n        scores: arrayRemove(scoreId)\n      });\n    } catch (error) {\n      console.error(\"Error deleting score: \", error);\n    }\n};\n\n\n\n// FOR DEVELOPMENT ONLY\nexport const deleteAllDocuments = async (collectionName) => {\n  const querySnapshot = await getDocs(collection(db, collectionName));\n  querySnapshot.forEach((document) => {\n    deleteDoc(doc(db, collectionName, document.id));\n  });\n};\n\n// STILL DEVELOPMENT ONLY\nexport const clearUserScores = async () => {\n\n  const auth = getAuth();\n  const user = auth.currentUser;\n\n  const userId = await getUserDocumentId(user.uid);\n  const userDocRef = doc(db, \"users\", userId);\n  try {\n    await updateDoc(userDocRef, {\n      scores: [] // Set scores array to an empty array\n    });\n    console.log(\"Scores array cleared for user:\", userId);\n  } catch (error) {\n    console.error(\"Error clearing scores array:\", error);\n  }\n};","export class Score {\n    constructor(documentId, patientName, { fibrillation, age, strokeScale, tHemorrhage, glucose, aspects, injury, nasoenteral }, createdAt, totalScore) {\n        this.documentId = documentId;\n        this.patientName = patientName;\n        this.score = {\n            fibrillation,\n            age,\n            strokeScale,\n            tHemorrhage,\n            glucose,\n            aspects,\n            injury,\n            nasoenteral\n          };\n        this.createdAt = createdAt;\n        this.totalScore = totalScore;\n        \n    }\n\n    updateOption(option, value) {\n        if (this.score.hasOwnProperty(option)) {\n            this.score[option] = value;\n        } else {\n            this[option] = value;\n        }\n    }\n}","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, TextField, FormControlLabel, Checkbox, Radio, RadioGroup, FormLabel, Box } from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { newScore } from '../operations/firebaseOperations';\nimport { Score } from '../models/models';\n\n\nfunction DisplayOptions() {\n    const [score, setScore] = useState(new Score(undefined, undefined,\n            {   fibrillation: false, \n                age: false, \n                strokeScale: false, \n                tHemorrhage: 'none', \n                glucose: false, \n                aspects: false, \n                injury: false, \n                nasoenteral: false  }, undefined, undefined));\n    const [openDialog, setOpenDialog] = useState(false);\n\n  \n\n\n    const navigate = useNavigate();\n\n    const handleOptionChange = (option, value) => {\n        const updatedScore = new Score(\n            score.documentId, \n            score.patientName,{ \n                fibrillation: score.score.fibrillation,\n                age: score.score.age,\n                strokeScale: score.score.strokeScale,\n                tHemorrhage: score.score.tHemorrhage,\n                glucose: score.score.glucose,\n                aspects: score.score.aspects,\n                injury: score.score.injury,\n                nasoenteral: score.score.nasoenteral,\n            },\n            score.createdAt,\n            score.totalScore\n            );\n        updatedScore.updateOption(option, value);\n        setScore(updatedScore);\n    };\n\n    const handleClickOpen = () => {\n        setOpenDialog(true);\n    };\n    \n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n    \n        // Directly calculate total score right before submission\n        const calculatedTotalScore = Object.keys(score.score).reduce((acc, key) => {\n            const value = score.score[key];\n            if (typeof value === 'boolean' && value) {\n                if (key === 'strokeScale' || key === 'aspects') {\n                    return acc + 2; // strokeScale and aspects are worth 2 points each\n                } else {\n                    return acc + 1;\n                }\n            }\n            return acc;\n        }, 0) + (score.score.tHemorrhage === 'petequial' ? 1 : score.score.tHemorrhage === 'hematoma' ? 2 : 0);\n    \n        try {\n\n            await newScore(score, calculatedTotalScore);\n        \n            navigate('/success', { state: { patientName: score.patientName , totalScore: calculatedTotalScore } });\n        } catch (error) {\n        console.error(\"Could not add the document: \", error);\n        }\n    };\n  \n  \n\n    return (\n        <Box sx={{ padding: 3, maxWidth: 600, margin: 'auto' }}>\n            <form onSubmit={handleSubmit} sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    //'& .MuiTextField-root': { m: 1, width: '25ch' }, // Adjust field sizes\n                    //'& .MuiButton-root': { m: 1, width: '50ch' }, // Adjust button sizes\n      }} >\n            <TextField\n                label=\"Nome do Paciente\"\n                value={score.patientName}\n                onChange={(e) => handleOptionChange('patientName',e.target.value)}\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n            />\n\n            <div>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                        checked={score.score.fibrillation}\n                        onChange={(e) => handleOptionChange('fibrillation', e.target.checked)}\n                        name=\"fibrillation\"\n                        />\n                    }\n                    label=\"Flutter/Atrial fibrillation? (1 pt)\"\n                />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.age}\n                    onChange={(e) => handleOptionChange('age', e.target.checked)}\n                    name=\"age\"\n                    />\n                }\n                label=\"Age >= 75? (1 pt)\"\n            />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.strokeScale}\n                    onChange={(e) => handleOptionChange('strokeScale', e.target.checked)}\n                    name=\"strokeScale\"\n                    />\n                }\n                label=\"Stroke Scale NIHSS >= 12? (2 pts)\"\n                />\n            </div>\n\n            <FormLabel component=\"legend\">Transformation Hemorrhage</FormLabel>\n            <RadioGroup\n                name=\"tHemorrhage\"\n                value={score.score.tHemorrhage}\n                onChange={(e) => handleOptionChange('tHemorrhage', e.target.value)}\n            >\n                <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n                <FormControlLabel value=\"petequial\" control={<Radio />} label=\"Petequial (1 pt)\" />\n                <FormControlLabel value=\"hematoma\" control={<Radio />} label=\"Hematoma (2 pts)\" />\n            </RadioGroup>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.glucose}\n                    onChange={(e) => handleOptionChange('glucose', e.target.checked)}\n                    name=\"glucose\"\n                    />\n                }\n                label=\"Glucose >= 140? (1 pt)\"\n            />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.aspects}\n                    onChange={(e) => handleOptionChange('aspects', e.target.checked)}\n                    name=\"aspects\"\n                    />\n                }\n                label=\"ASPECTS  <= 7? (2 pts)\"\n            />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.injury}\n                    onChange={(e) => handleOptionChange('injury', e.target.checked)}\n                    name=\"injury\"\n                    />\n                }\n                label=\"Injury (injúria renal)? (1 pt)\"\n            />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.nasoenteral}\n                    onChange={(e) => handleOptionChange('nasoenteral', e.target.checked)}\n                    name=\"nasoenteral\"\n                    />\n                }\n                label=\"Nasoenteral sonda? (1 pt)\"\n            />\n            </div>\n    \n            <Button sx={{ marginTop: '20px', width: '100%'}} variant=\"contained\" onClick={handleClickOpen}>\n                Submit\n            </Button>\n                <Dialog\n                    open={openDialog}\n                    onClose={handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\">\n                    <DialogTitle id=\"alert-dialog-title\">\n                    {\"Confirm Submission\"}\n                    </DialogTitle>\n                    <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Are you sure you want to submit the score?\n                    </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleSubmit} autoFocus>\n                        Confirm\n                    </Button>\n                    \n                    </DialogActions>\n                </Dialog>\n            </form>\n            <Button sx={{ marginTop: '10px', width: '100%'}} variant=\"outlined\" onClick={() => navigate(-1)}>Voltar</Button>\n        </Box>\n      );\n\n}\n\nexport default DisplayOptions;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Box, Button } from '@mui/material';\n\nfunction SuccessPage() {\n  const location = useLocation();\n  const { patientName, totalScore } = location.state || {};\n  const navigate = useNavigate();\n\n  return (\n      <Box sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        //'& .MuiTextField-root': { m: 1, width: '25ch' }, // Adjust field sizes\n        //'& .MuiButton-root': { m: 1, width: '25ch' }, // Adjust button sizes\n      }}>\n        <h1>Score adicionado!</h1>\n        <p>Nome do paciente: {patientName}</p>\n        <p>Score total: {totalScore}</p>\n        <Button sx={{marginTop: '15px', width: '100%'}} variant=\"contained\" onClick={() => navigate('/main-menu')}>Voltar para menu principal</Button>\n      </Box> \n  );\n}\n\n\n\nexport default SuccessPage;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { Grid } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { getAuth, signOut } from 'firebase/auth';\n\n\nfunction MainMenu() {\n  const navigate = useNavigate();\n  const auth = getAuth();\n\n\n  const handleAddScore = () => {\n    // Navigate to the Add Score page/component\n    navigate('/add-score');\n  };\n\n  const handleListScores = () => {\n    // Navigate to the List Scores page/component\n    navigate('/list-scores', { state: { userId: auth.currentUser.uid }});\n  };\n\n  const handleSignOut = () => {\n    signOut(auth);\n    navigate('/');\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mt: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Menu Principal\n      </Typography>\n      <Box \n        sx={{ '& > button': { m: 1 } }}\n      >\n        <Grid container spacing={2} alignItems={'center'} direction={'column'}>\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAddScore}>\n              Adicionar Score\n            </Button>\n          </Grid>\n\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleListScores}>\n              Listar Scores\n            </Button>\n          </Grid>\n            \n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSignOut}>\n              Sign Out\n            </Button>\n          </Grid>\n\n        </Grid>\n\n      </Box> \n\n    </Box> // first box\n  );\n}\n\nexport default MainMenu;\n","import React, { useState } from 'react';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport { TextField, Button, Box, Grid } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport logo from '../../assets/fastgain_logo_F.jpeg';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n\n  const auth = getAuth();\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    setError(''); // Reset error message\n\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      // Handle successful login (e.g., navigate to a dashboard page)\n      navigate('/main-menu');\n    } catch (error) {\n      setError('Failed to log in');\n      console.error(error.message);\n    }\n  };\n\n  return (\n        <Box component=\"form\" \n          onSubmit={handleLogin} \n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            height: '50vh',\n            marginTop: '150px',\n            flexDirection: 'column',\n            alignItems: 'center'\n            //'& .MuiTextField-root': { m: 1, width: '25ch' }, \n            //'& .MuiButton-root': { m: 1, width: '25ch' }, \n          }}\n          \n        >\n          <img src={logo} alt=\"Logo\" style={{maxWidth: '100%', maxHeight: '100%'}}/>\n          <Grid container spacing={2} alignItems={'center'} direction={'column'}>\n            <Grid item marginTop={'10px'}>\n              <TextField\n                label=\"Email\"\n                variant=\"outlined\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </Grid>\n\n            <Grid item >\n              <TextField\n                label=\"Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </Grid>\n\n            {error && <p>{error}</p>}\n            <Grid item width='30%'>\n              <Button type=\"submit\" variant=\"contained\" fullWidth>Login</Button>\n            </Grid>\n\n            <Grid item width='30%'>\n              <Button\n                onClick={() => navigate('/new-user')}\n                fullWidth\n                variant=\"outlined\"\n                color='secondary'\n                sx={{ mt: 1, mb: 2 }}\n              >\n                Sign Up\n              </Button>\n            </Grid>\n\n          </Grid>\n        \n        </Box>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { TextField, Button, Box } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { createNewUser } from '../operations/firebaseOperations';\n\nfunction NewUser() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSignUp = async (event) => {\n    event.preventDefault();\n    setError('');\n\n    try {\n\n      await createNewUser(email, password, name);\n  \n      navigate('/main-menu');\n\n    } catch (error) {\n\n      console.error(\"Could not add the document: \", error);\n\n    }\n\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSignUp} noValidate sx={{ mt: 1 }}>\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"name\"\n        label=\"Name\"\n        name=\"name\"\n        autoComplete=\"name\"\n        autoFocus\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"email\"\n        label=\"Email Address\"\n        name=\"email\"\n        autoComplete=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        id=\"password\"\n        autoComplete=\"current-password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      {error && <Box color=\"error.main\">{error}</Box>}\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        sx={{ mt: 3, mb: 2 }}\n      >\n        Sign Up\n      </Button>\n    </Box>\n  );\n}\n\nexport default NewUser;\n","import React, { useState } from 'react';\nimport { Card, CardContent, Typography, IconButton, Menu, MenuItem } from '@mui/material';\nimport MoreVertIcon from '@mui/material/Icon';\n\nconst ScoreCard = ({ score, onViewOptions, onUpdateScore, onDeleteScore }) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n  \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n  \n    return (\n      <Card>\n        <CardContent>\n          {score && (\n            <div>\n          <Typography variant=\"h5\">Paciente: {score.patientName}</Typography>\n          <Typography variant=\"body1\">Score total: {score.totalScore}</Typography>\n          <IconButton\n            aria-label=\"more\"\n            aria-controls=\"long-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}>\n              <Typography variant=\"subtitle2\" component=\"span\">\n                <MoreVertIcon fontSize='small' />Mais opções\n              </Typography>\n          </IconButton>\n          <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose}>\n          <MenuItem onClick={() => { onViewOptions(score); handleClose(); }}>Detalhes</MenuItem>\n          <MenuItem onClick={() => { onUpdateScore(score); handleClose(); }}>Atualizar Score</MenuItem>\n          <MenuItem onClick={() => { onDeleteScore(score); handleClose(); }}>Excluir Score</MenuItem>\n        </Menu>\n        </div>\n        )}\n        </CardContent>\n      </Card>\n    );\n  };\n\nexport default ScoreCard;","import { deleteScore, fetchScores } from '../operations/firebaseOperations';\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Button } from '@mui/material';\nimport ScoreCard from '../display/ScoreCard';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\n\nconst ListScores = () => {\n  const [scores, setScores] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const location = useLocation();\n  const { userId } = location.state || {};\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const loadScores = async () => {\n      const fetchedScores = await fetchScores(userId);\n      const validScores = fetchedScores.filter(score => score != null);\n      setScores(validScores);\n    };\n    loadScores();\n  }, [refresh]);\n\n  const handleViewOptions = (scores) => {\n    // Logic to view options\n    navigate('/score-details', {state: {score: scores}});\n  };\n\n  const handleUpdateScore = (scores) => {\n    // Logic to update score, potentially navigate to DisplayOptions with score data\n    navigate('/update-score', {state: {receivedScore: scores}});\n  };\n\n  const handleDeleteScore = async (scores) => {\n    // Logic to delete score\n    await deleteScore(scores.id);\n    setRefresh(prev => !prev);\n  };\n\n  return (\n    <Grid container spacing={2} direction={'column'} alignContent={'center'}>\n      {scores.map(scores => (\n        <Grid item key={scores.id} xs={12}>\n          <ScoreCard\n            score={scores}\n            onViewOptions={() => handleViewOptions(scores)}\n            onUpdateScore={() => handleUpdateScore(scores)}\n            onDeleteScore={() => handleDeleteScore(scores)}\n          />\n        </Grid>\n      ))}\n      <Button sx={{margin: '20px', width: '28%', display: 'flex', flexDirection: 'center'}} variant=\"contained\" onClick={() => navigate(-1)}>Voltar</Button>\n    </Grid>\n  );\n};\n\nexport default ListScores;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Button, FormControlLabel, Checkbox, FormLabel, Box } from '@mui/material';\n\n\nfunction ViewScore() {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { score } = location.state || {};\n\n    const handleBackButton = () => {\n        navigate(-1);\n    }\n\n    return (\n        <Box sx={{ padding: 3, maxWidth: 600, margin: 'auto' }}>\n\n            <div>\n                <p>Paciente: {score.patientName}</p>\n            </div>\n\n            <div>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                        checked={score.score.fibrillation}\n                        disabled\n                        name=\"fibrillation\"\n                        />\n                    }\n                    label=\"Flutter/Atrial fibrillation\"\n                />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.age}\n                    disabled\n                    name=\"age\"\n                    />\n                }\n                label=\"Age >= 75\"\n            />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.strokeScale}\n                    disabled\n                    name=\"strokeScale\"\n                    />\n                }\n                label=\"Stroke Scale NIHSS >= 12\"\n                />\n            </div>\n\n            <FormLabel disabled component=\"legend\">Transformation Hemorrhage:</FormLabel>\n            {score.score.tHemorrhage === 'none' && (\n                <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.tHemorrhage}\n                    disabled\n                    name=\"tHemorrhage\"\n                    />\n                }\n                label=\"None\"\n                />\n            )}\n            {score.score.tHemorrhage === 'petequial' && (\n                <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.tHemorrhage}\n                    disabled\n                    name=\"tHemorrhage\"\n                    />\n                }\n                label=\"petequial\"\n                />\n            )}\n            {score.score.tHemorrhage === 'hematoma' && (\n                <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.tHemorrhage}\n                    disabled\n                    name=\"tHemorrhage\"\n                    />\n                }\n                label=\"hematoma\"\n                />\n            )}\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.glucose}\n                    disabled\n                    name=\"glucose\"\n                    />\n                }\n                label=\"Glucose >= 140\"\n            />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.aspects}\n                    disabled\n                    name=\"aspects\"\n                    />\n                }\n                label=\"ASPECTS  <= 7\"\n            />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.injury}\n                    disabled\n                    name=\"injury\"\n                    />\n                }\n                label=\"Injury (injúria renal)\"\n            />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.nasoenteral}\n                    disabled\n                    name=\"nasoenteral\"\n                    />\n                }\n                label=\"Nasoenteral sonda\"\n            />\n            </div>\n    \n            <Button sx={{marginTop: '15px', width: '100%'}} variant=\"contained\" onClick={handleBackButton}>\n                Voltar\n            </Button>\n        </Box>\n      );\n\n}\n\nexport default ViewScore;\n","import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Button, FormControlLabel, Checkbox, Radio, RadioGroup, FormLabel, Box } from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { updateScore } from '../operations/firebaseOperations';\nimport { Score } from '../models/models';\n\n\nfunction UpdateScore() {\n\n    const location = useLocation();\n    const { receivedScore } = location.state || {};\n\n    const [score, setScore] = useState(new Score(receivedScore.id, receivedScore.patientName,\n            {   fibrillation: receivedScore.score.fibrillation, \n                age: receivedScore.score.age, \n                strokeScale: receivedScore.score.strokeScale, \n                tHemorrhage: receivedScore.score.tHemorrhage, \n                glucose: receivedScore.score.glucose, \n                aspects: receivedScore.score.aspects, \n                injury: receivedScore.score.injury, \n                nasoenteral: receivedScore.score.nasoenteral  }, receivedScore.createdAt, receivedScore.totalScore));\n    const [openDialog, setOpenDialog] = useState(false);\n\n  \n\n\n    const navigate = useNavigate();\n\n    const handleOptionChange = (option, value) => {\n        const updatedScore = new Score(\n            score.documentId, \n            score.patientName,{ \n                fibrillation: score.score.fibrillation,\n                age: score.score.age,\n                strokeScale: score.score.strokeScale,\n                tHemorrhage: score.score.tHemorrhage,\n                glucose: score.score.glucose,\n                aspects: score.score.aspects,\n                injury: score.score.injury,\n                nasoenteral: score.score.nasoenteral,\n            },\n            score.createdAt,\n            score.totalScore\n            );\n        updatedScore.updateOption(option, value);\n        setScore(updatedScore);\n    };\n\n    const handleClickOpen = () => {\n        setOpenDialog(true);\n    };\n    \n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n    \n        // Directly calculate total score right before submission\n        const calculatedTotalScore = Object.keys(score.score).reduce((acc, key) => {\n            const value = score.score[key];\n            if (typeof value === 'boolean' && value) {\n                if (key === 'strokeScale' || key === 'aspects') {\n                    return acc + 2; // strokeScale and aspects are worth 2 points each\n                } else {\n                    return acc + 1;\n                }\n            }\n            return acc;\n        }, 0) + (score.score.tHemorrhage === 'petequial' ? 1 : score.score.tHemorrhage === 'hematoma' ? 2 : 0);\n    \n        try {\n\n            await updateScore(score.documentId, {\n                score: score.score,\n                updatedAt: new Date(),\n                totalScore: calculatedTotalScore\n            });\n        \n            navigate('/success', { state: { patientName: score.patientName , totalScore: calculatedTotalScore } });\n        } catch (error) {\n        console.error(\"Could not add the document: \", error);\n        }\n    };\n  \n  \n\n    return (\n        <Box sx={{ padding: 3, maxWidth: 600, margin: 'auto' }}>\n\n            <div>\n                <p>Paciente: {score.patientName}</p>\n            </div>\n            <form onSubmit={handleSubmit} sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    '& .MuiTextField-root': { m: 1, width: '25ch' }, // Adjust field sizes\n                    '& .MuiButton-root': { m: 1, width: '25ch' }, // Adjust button sizes\n      }} >\n\n            <div>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                        checked={score.score.fibrillation}\n                        onChange={(e) => handleOptionChange('fibrillation', e.target.checked)}\n                        name=\"fibrillation\"\n                        />\n                    }\n                    label=\"Flutter/Atrial fibrillation? (1 pt)\"\n                />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.age}\n                    onChange={(e) => handleOptionChange('age', e.target.checked)}\n                    name=\"age\"\n                    />\n                }\n                label=\"Age >= 75? (1 pt)\"\n            />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.strokeScale}\n                    onChange={(e) => handleOptionChange('strokeScale', e.target.checked)}\n                    name=\"strokeScale\"\n                    />\n                }\n                label=\"Stroke Scale NIHSS >= 12? (2 pts)\"\n                />\n            </div>\n\n            <FormLabel component=\"legend\">Transformation Hemorrhage</FormLabel>\n            <RadioGroup\n                name=\"tHemorrhage\"\n                value={score.score.tHemorrhage}\n                onChange={(e) => handleOptionChange('tHemorrhage', e.target.value)}\n            >\n                <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n                <FormControlLabel value=\"petequial\" control={<Radio />} label=\"Petequial (1 pt)\" />\n                <FormControlLabel value=\"hematoma\" control={<Radio />} label=\"Hematoma (2 pts)\" />\n            </RadioGroup>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.glucose}\n                    onChange={(e) => handleOptionChange('glucose', e.target.checked)}\n                    name=\"glucose\"\n                    />\n                }\n                label=\"Glucose >= 140? (1 pt)\"\n            />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.aspects}\n                    onChange={(e) => handleOptionChange('aspects', e.target.checked)}\n                    name=\"aspects\"\n                    />\n                }\n                label=\"ASPECTS  <= 7? (2 pts)\"\n            />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.injury}\n                    onChange={(e) => handleOptionChange('injury', e.target.checked)}\n                    name=\"injury\"\n                    />\n                }\n                label=\"Injury (injúria renal)? (1 pt)\"\n            />\n            </div>\n\n            <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                    checked={score.score.nasoenteral}\n                    onChange={(e) => handleOptionChange('nasoenteral', e.target.checked)}\n                    name=\"nasoenteral\"\n                    />\n                }\n                label=\"Nasoenteral sonda? (1 pt)\"\n            />\n            </div>\n    \n            <Button sx={{ marginTop: '10px', width: '100%'}}  variant=\"contained\" onClick={handleClickOpen}>\n                Submit\n            </Button>\n                <Dialog\n                    open={openDialog}\n                    onClose={handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\">\n                    <DialogTitle id=\"alert-dialog-title\">\n                    {\"Confirm Submission\"}\n                    </DialogTitle>\n                    <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Are you sure you want to submit the score?\n                    </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleSubmit} autoFocus>\n                        Confirm\n                    </Button>\n                    \n                    </DialogActions>\n                </Dialog>\n            </form>\n            <Button sx={{ marginTop: '10px', width: '100%'}} variant=\"outlined\" onClick={() => navigate(-1)}>Voltar</Button>\n        </Box>\n      );\n\n}\n\nexport default UpdateScore;\n","import React from 'react';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\nimport DisplayOptions from './components/display/DisplayOptions';\nimport SuccessPage from './components/pages/SuccessPage';\nimport MainMenu from './components/menu/MainMenu';\nimport Login from './components/services/Login';\nimport NewUser from './components/services/NewUser';\nimport ListScores from './components/pages/ListScores';\nimport ViewScore from './components/pages/ViewScore';\nimport UpdateScore from './components/pages/UpdateScore';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Login />} />\n        <Route path=\"/add-score\" element={<DisplayOptions />} />\n        <Route path=\"/success\" element={<SuccessPage />} />\n        <Route path=\"/main-menu\" element={<MainMenu />} />\n        <Route path=\"/new-user\" element={<NewUser />} />\n        <Route path=\"/list-scores\" element={<ListScores/>}> </Route>\n        <Route path=\"/score-details\" element={<ViewScore/>}></Route>\n        <Route path=\"/update-score\" element={<UpdateScore/>}></Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport App from './App';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#007bff', // Example blue color\n    },\n    secondary: {\n      main: '#28a745', // Example green color\n    },\n    background: {\n      default: '#fff', // White background\n    },\n    text: {\n      primary: '#007bff', // Blue text for primary actions or headings\n      secondary: '#28a745', // Green text for secondary information or accents\n    },\n  },\n  \n});\n\nfunction ThemedApp() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline /> \n      <App />\n    </ThemeProvider>\n  );\n}\n\nexport default ThemedApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport ThemedApp from './ThemedApp';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <ThemedApp />\n  </React.StrictMode>\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/fastgain_logo_F.be41137c.jpeg\";"],"sourceRoot":""}